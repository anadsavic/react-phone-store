[{"C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\index.js":"1","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\App.js":"2","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\reportWebVitals.js":"3","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\Navbar.js":"4","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\ProductList.js":"5","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\Details.js":"6","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\Default.js":"7","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\Product.js":"8","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\Button.js":"9","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\Title.js":"10","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\data.js":"11","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\context.js":"12","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\Modal.js":"13","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\cart\\Cart.js":"14","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\cart\\CartColumns.js":"15","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\cart\\EmptyCart.js":"16","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\cart\\CartList.js":"17","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\cart\\CartItem.js":"18","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\cart\\CartTotals.js":"19","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\cart\\PaypallButton.js":"20"},{"size":702,"mtime":1609406832314,"results":"21","hashOfConfig":"22"},{"size":1040,"mtime":1609790770528,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":1185,"mtime":1609366392585,"results":"25","hashOfConfig":"22"},{"size":800,"mtime":1609779297649,"results":"26","hashOfConfig":"22"},{"size":2397,"mtime":1609787836539,"results":"27","hashOfConfig":"22"},{"size":716,"mtime":1610027475343,"results":"28","hashOfConfig":"22"},{"size":2914,"mtime":1609789849358,"results":"29","hashOfConfig":"22"},{"size":639,"mtime":1609780790281,"results":"30","hashOfConfig":"22"},{"size":460,"mtime":1609796574566,"results":"31","hashOfConfig":"22"},{"size":6749,"mtime":1609410077118,"results":"32","hashOfConfig":"22"},{"size":4313,"mtime":1610026645499,"results":"33","hashOfConfig":"22"},{"size":1723,"mtime":1609789771526,"results":"34","hashOfConfig":"22"},{"size":702,"mtime":1610049822711,"results":"35","hashOfConfig":"22"},{"size":1225,"mtime":1609796191649,"results":"36","hashOfConfig":"22"},{"size":370,"mtime":1609796444616,"results":"37","hashOfConfig":"22"},{"size":422,"mtime":1610022266307,"results":"38","hashOfConfig":"22"},{"size":1968,"mtime":1610019719401,"results":"39","hashOfConfig":"22"},{"size":1943,"mtime":1610049907721,"results":"40","hashOfConfig":"22"},{"size":2661,"mtime":1610051287798,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"9bkg2l",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},"C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\index.js",[],["93","94"],"C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\App.js",["95"],"import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport ProductList from \"./components/ProductList\";\nimport Details from \"./components/Details\";\nimport Default from \"./components/Default\";\nimport Cart from \"./components/cart/Cart\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Modal from \"./components/Modal\";\n\nconst AppContext = React.createContext();\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <Navbar/>\n            <Switch>\n                <Route exact path=\"/\">\n                    <ProductList/>\n                </Route>\n                <Route exact path=\"/cart\">\n                    <Cart/>\n                </Route>\n                <Route exact path=\"/details\">\n                    <Details/>\n                </Route>\n                <Route exact path=\"*\">\n                    <Default/>\n                </Route>\n            </Switch>\n            <Modal/>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\reportWebVitals.js",[],"C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\Navbar.js",[],"C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\ProductList.js",["96","97","98"],"import React from 'react';\r\nimport Title from \"./Title\";\r\nimport {useGlobalContext} from \"../context\";\r\nimport Product from \"./Product\";\r\n\r\nfunction ProductList(props) {\r\n    const {products, detailProd, handleDetail, addToCart} = useGlobalContext();\r\n    return (\r\n        <React.Fragment>\r\n            {/*<Product/>*/}\r\n            <div className=\"py-5\">\r\n                <div className=\"container\">\r\n                    <Title name=\"our\" title=\"products\"/>\r\n                    <div className=\"row\">\r\n                        {products.map((item) => {\r\n                            return <Product product={item} key={item.id}/>;\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ProductList;","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\Details.js",["99","100"],"import React from 'react';\r\nimport {useGlobalContext} from \"../context\";\r\nimport {Link} from 'react-router-dom';\r\nimport {ButtonContainer} from \"./Button\";\r\n\r\nfunction Details(props) {\r\n    const {addToCart, detailProd, closeModal, openModal} = useGlobalContext();\r\n    const {id, company, img, info, price, title, inCart} = detailProd;\r\n    return (\r\n        <div className=\"container py-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-10 mx-auto text-center text-slanted text-blue my-5\">\r\n                    <h1>{title}</h1>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-10 mx-auto col-md-6 my-3 text-capitalize\">\r\n                    <img src={img} alt=\"image\" className=\"img-fluid\"/>\r\n                </div>\r\n                <div className=\"col-10 mx-auto col-md-6 my-3 text-capitalize\">\r\n                    <h2>model: {title}</h2>\r\n                    <h4 className=\"text-title text-uppercase text-muted mt-3 mb-2\">\r\n                        made by: <span className=\"text-uppercase\">{company}</span>\r\n                    </h4>\r\n                    <h4 className=\"text-blue\">\r\n                        <strong>\r\n                            price:<span> $ </span>{price}\r\n                        </strong>\r\n                    </h4>\r\n                    <p className=\"text-capitalize font-weight-bold mt-3 mb-0\">\r\n                        some info about product:\r\n                    </p>\r\n                    <p className=\"text-muted lead\">\r\n                        {info}\r\n                    </p>\r\n                    <div>\r\n                        <Link to=\"/\">\r\n                            <ButtonContainer>back to products</ButtonContainer>\r\n                        </Link>\r\n                        <ButtonContainer disabled={inCart ? true : false}\r\n                                         onClick={() => {\r\n                                             addToCart(id);\r\n                                             openModal(id);\r\n                                         }}\r\n                                         cart\r\n                        >\r\n                            {inCart ? 'inCart' : 'add to cart'}\r\n                        </ButtonContainer>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Details;","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\Default.js",[],"C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\Product.js",["101"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useGlobalContext} from \"../context\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Product({product}) {\r\n    const {handleDetail, addToCart, openModal} = useGlobalContext();\r\n    const {id, title, img, price, inCart} = product;\r\n    return (\r\n        <ProductWrapper className=\"col-9 mx-auto col-md-6 col-lg-3 my-3\">\r\n            <div className=\"cart\">\r\n                <div className=\"img-container p-5\"\r\n                     onClick={\r\n                         () => {\r\n                             handleDetail(id);\r\n\r\n                         }\r\n\r\n                     }>\r\n                    <Link to=\"/details\">\r\n                        <img src={img} alt=\"product image\" className=\"card-img-top\"/>\r\n                    </Link>\r\n                    <button className=\"cart-btn\" disabled={inCart ? true : false} onClick={() => {\r\n                        addToCart(id)\r\n                        openModal(id)\r\n                    }}>\r\n\r\n                        {inCart ? (<p className=\"text-capitalize mb-0\" disabled>in cart</p>) : (\r\n                            <i className=\"fas fa-cart-plus\"/>)}\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-footer d-flex justify-content-between\">\r\n                    <p className=\"align-self-center mb-0\">\r\n                        {title}\r\n                    </p>\r\n                    <h5 className=\"text-blue font-weight-bold mb-0\">\r\n                        <span className=\"mr-1\">$</span>{price}\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n        </ProductWrapper>\r\n    );\r\n}\r\n\r\nProduct.propTypes = {\r\n    product: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        img: PropTypes.string,\r\n        title: PropTypes.string,\r\n        price: PropTypes.number,\r\n        inCart: PropTypes.bool\r\n    }).isRequired\r\n};\r\n\r\nconst ProductWrapper = styled.div`\r\n.card{\r\nborder-color:transparent;\r\ntransition:all 1s linear;\r\n\r\n}\r\n.card-footer{\r\nbackground: transparent;\r\nborder-top:transparent;\r\ntransition:all 1s linear;\r\n}\r\n&:hover{\r\n.card{\r\nborder:0.04rem solid rgba(0,0,0,0.2);\r\nbox-shadow:2px 2px 5px 0px rgba(0,0,0,0.2)\r\n}\r\n.card-footer{\r\nbackground: rgba(247, 247, 247);\r\n}\r\n\r\n}\r\n.img-container{\r\nposition: relative;\r\noverflow: hidden;\r\n}\r\n.card-img-top{\r\ntransition: all 1s linear;\r\n}\r\n.img-container:hover .card-img-top{\r\ntransform: scale(1.2);\r\n}\r\n.cart-btn{\r\nposition:absolute;\r\nbottom: 0;\r\nright:0;\r\npadding:0.2rem 0.4rem;\r\nbackground: var(--lightBlue);\r\nborder: none;\r\ncolor: var(--mainWhite);\r\nfont-size:1.4rem;\r\nborder-radius:0.5rem 0 0 0;\r\ntransform: translate(100%,100%);\r\ntransition: all 1s linear;\r\n}\r\n.img-container: hover .cart-btn{\r\ntransform: translate(0,0);\r\n}\r\n.cart-btn:hover{\r\ncolor: var(--mainBlue);\r\ncursor: pointer;\r\n}\r\n\r\n`\r\nexport default Product;","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\Button.js",[],"C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\Title.js",[],"C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\data.js",[],"C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\context.js",[],"C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\Modal.js",["102"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useGlobalContext} from \"../context\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {ButtonContainer} from \"./Button\";\r\n\r\nfunction Modal(props) {\r\n    const {modalProduct, modalOpen, closeModal} = useGlobalContext();\r\n    const {id, title, price, img} = modalProduct;\r\n\r\n    if (!modalOpen) return null;\r\n    return (\r\n        <ModalContainer>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div id=\"modal\" className=\"col-8 mx-auto col-md-6 col-lg-4 text-center text-capitalize p-5\">\r\n                        <h5>item added to the cart</h5>\r\n                        <img src={img} className=\"img-fluid\" alt=\"product\"/>\r\n                        <h5>{title}</h5>\r\n                        <h5 className=\"text-muted\">price : $ {price}</h5>\r\n                        <Link to=\"/\">\r\n                            <ButtonContainer onClick={() => closeModal()}>\r\n                               Store\r\n                            </ButtonContainer>\r\n                        </Link>\r\n                        <Link to=\"/cart\">\r\n                            <ButtonContainer cart onClick={() => closeModal()}>\r\n                                Go to the cart\r\n                            </ButtonContainer>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ModalContainer>\r\n    );\r\n\r\n}\r\n\r\nconst ModalContainer = styled.div`\r\nposition: fixed;\r\ntop:0;\r\nleft:0;\r\nright:0;\r\nbottom:0;\r\nbackground: rgba(0,0,0,0.3);\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n#modal{\r\nbackground: var(--mainWhite);\r\n}\r\n`\r\nexport default Modal;","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\cart\\Cart.js",[],"C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\cart\\CartColumns.js",["103"],"import React from 'react';\r\nimport {useGlobalContext} from \"../../context\";\r\n\r\nfunction CartColumns(props) {\r\n    const {} = useGlobalContext();\r\n    return (\r\n        <div className=\"container-fluid text-center d-none d-lg-block\">\r\n            <div className=\"row\">\r\n                <div className=\"col-10 mx-auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">products</p>\r\n                </div>\r\n                <div className=\"col-10 mx-auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">Name of product</p>\r\n                </div>\r\n                <div className=\"col-10 mx-auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">Price</p>\r\n                </div>\r\n                <div className=\"col-10 mx-auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">Quantity</p>\r\n                </div>\r\n                <div className=\"col-10 mx-auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">Remove</p>\r\n                </div>\r\n                <div className=\"col-10 mx-auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">Total</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartColumns;","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\cart\\EmptyCart.js",[],"C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\cart\\CartList.js",["104"],"import React, {useEffect} from 'react';\r\nimport CartItem from \"./CartItem\";\r\nimport {useGlobalContext} from \"../../context\";\r\n\r\nfunction CartList() {\r\n    const {cart} = useGlobalContext();\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            {cart.map(product => {\r\n                return <CartItem key={product.id} item={product}/>\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartList;","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\cart\\CartItem.js",["105"],"import React from 'react';\r\nimport {useGlobalContext} from \"../../context\";\r\n\r\nfunction CartItem({item}) {\r\n    const {id, title, img, price, total, count} = item;\r\n    const {increment, decrement, removeItem} = useGlobalContext();\r\n    return (\r\n        <div className=\"row my-2 text-capitalize text-center\">\r\n            <div className=\"col-10 mx-auto col-lg-2\">\r\n                <img src={img} alt=\"image\" style={{width: '5rem', height: '5rem'}} className=\"img-fluid\"/>\r\n            </div>\r\n            <div className=\"col-10 mx-auto col-lg-2\">\r\n                <span className=\"d-lg-none\">product:</span>\r\n                {title}\r\n            </div>\r\n            <div className=\"col-10 mx-auto col-lg-2\">\r\n                <span className=\"d-lg-none\">price:</span>\r\n                $ {price}\r\n            </div>\r\n            <div className=\"col-10 mx-auto col-lg-2 my-2 my-lg-0\">\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <span className=\"btn btn-black mx-1\" onClick={\r\n                        () => {\r\n                            if (count === 1) {\r\n                                return removeItem(id);\r\n                            } else {\r\n                                return decrement(id)\r\n                            }\r\n                        }\r\n                    }>-</span>\r\n                    <span className=\"btn btn-black mx-1\">{count}</span>\r\n                    <span className=\"btn btn-black mx-1\" onClick={() => increment(id)}>+</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-10 mx-auto col-lg-2\">\r\n                <div className=\"cart-icon\">\r\n                    <i className=\"fas fa-trash\" onClick={() => removeItem(id)}></i>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"col-10 mx-auto col-lg-2\">\r\n                <strong> item total: $ {total}</strong>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartItem;","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\cart\\CartTotals.js",["106"],"import React, {useEffect} from 'react';\r\nimport {useGlobalContext} from \"../../context\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PaypallButton from \"./PaypallButton\";\r\n\r\nfunction CartTotals({history}) {\r\n    const {cartSubtotal, cartTax, cartTotal, clearCart, addTotals, cart} = useGlobalContext();\r\n    useEffect(() => {\r\n        addTotals();\r\n    }, [cart]);\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 mt-2 ml-sm-5 ml-md-auto col-sm-8 text-capitalize text-right\">\r\n                        <Link to=\"/\">\r\n                            <button className=\"btn btn-outline-danger text-uppercase mb-3 px-5\"\r\n                                    type=\"button\" onClick={() => clearCart()}>\r\n                                clear cart\r\n                            </button>\r\n                        </Link>\r\n                        <h5>\r\n                            <span className=\"text-title\">\r\n                                subtotal:\r\n                            </span>\r\n                            <strong> $ {cartSubtotal}</strong>\r\n                        </h5>\r\n                        <h5>\r\n                            <span className=\"text-title\">\r\n                                tax:\r\n                            </span>\r\n                            <strong> $ {cartTax}</strong>\r\n                        </h5>\r\n                        <h5>\r\n                            <span className=\"text-title\">\r\n                                total:\r\n                            </span>\r\n                            <strong> $ {cartTotal}</strong>\r\n                        </h5>\r\n                        <PaypallButton total={cartTotal} clearCart={clearCart} history={history} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CartTotals;","C:\\Users\\Ana\\WebstormProjects\\e-commerce\\src\\components\\cart\\PaypallButton.js",["107"],"import React from 'react';\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\n\r\nexport default class MyApp extends React.Component {\r\n    render() {\r\n        const onSuccess = (payment) => {\r\n            // Congratulation, it came here means everything's fine!\r\n            console.log(\"The payment was succeeded!\", payment);\r\n            this.props.clearCart();\r\n            this.props.history.push('/');\r\n            // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n\r\n        const onCancel = (data) => {\r\n            // User pressed \"cancel\" or close Paypal's popup!\r\n            console.log('The payment was cancelled!', data);\r\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n\r\n        const onError = (err) => {\r\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n            console.log(\"Error!\", err);\r\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n        }\r\n\r\n        let env = 'sandbox'; // you can set here to 'production' for production\r\n        let currency = 'USD'; // or you can set this value from your props or state\r\n        let total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n\r\n        const client = {\r\n            sandbox:    process.env.REACT_APP_APP_ID,\r\n            production: 'YOUR-PRODUCTION-APP-ID',\r\n        }\r\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n        // For production app-ID:\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n\r\n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n        return (\r\n            <PaypalExpressBtn env={env} client={client} currency={currency} total={this.props.total} onError={onError} onSuccess={onSuccess} onCancel={onCancel} />\r\n        );\r\n    }\r\n}",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":12,"column":7,"nodeType":"114","messageId":"115","endLine":12,"endColumn":17},{"ruleId":"112","severity":1,"message":"116","line":7,"column":22,"nodeType":"114","messageId":"115","endLine":7,"endColumn":32},{"ruleId":"112","severity":1,"message":"117","line":7,"column":34,"nodeType":"114","messageId":"115","endLine":7,"endColumn":46},{"ruleId":"112","severity":1,"message":"118","line":7,"column":48,"nodeType":"114","messageId":"115","endLine":7,"endColumn":57},{"ruleId":"112","severity":1,"message":"119","line":7,"column":35,"nodeType":"114","messageId":"115","endLine":7,"endColumn":45},{"ruleId":"120","severity":1,"message":"121","line":20,"column":21,"nodeType":"122","endLine":20,"endColumn":71},{"ruleId":"120","severity":1,"message":"121","line":22,"column":25,"nodeType":"122","endLine":22,"endColumn":86},{"ruleId":"112","severity":1,"message":"123","line":9,"column":12,"nodeType":"114","messageId":"115","endLine":9,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":5,"column":11,"nodeType":"126","messageId":"127","endLine":5,"endColumn":13},{"ruleId":"112","severity":1,"message":"128","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":10,"column":17,"nodeType":"122","endLine":10,"endColumn":107},{"ruleId":"129","severity":1,"message":"130","line":10,"column":8,"nodeType":"131","endLine":10,"endColumn":14,"suggestions":"132"},{"ruleId":"112","severity":1,"message":"133","line":29,"column":13,"nodeType":"114","messageId":"115","endLine":29,"endColumn":18},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'AppContext' is assigned a value but never used.","Identifier","unusedVar","'detailProd' is assigned a value but never used.","'handleDetail' is assigned a value but never used.","'addToCart' is assigned a value but never used.","'closeModal' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'id' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addTotals'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'total' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},"Update the dependencies array to be: [addTotals, cart]",{"range":"139","text":"140"},[360,366],"[addTotals, cart]"]